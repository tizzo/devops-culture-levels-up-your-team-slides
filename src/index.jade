doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Getting more out of your logs

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    link(rel='stylesheet', type='text/css', href='styles/style.css')
    //link(rel='stylesheet', type='text/css', href='bower_components/bespoke-fx/src/main.css')
    //link(rel='stylesheet', type='text/css', href='bower_components/bespoke-fx/src/animations.css')
    // endbuild

  body

    article

      section(data-bespoke-hash='title', class="title")
        h1 DevOps
        h2 Level up your team

      section(data-bespoke-hash='about-me', class="intro")
        h1(class="outline") Hi! I'm Howard
        h2(class='flipped') You may know me as @tizzo

      section(class="zivtech")
        img(src="images/zivtech.png")

      section(class="red")
        h1 DevOps

      section(class="red")
        h1 Is not...

      section(class="black")
        h1 A job description

      section(class="black")
        h1 Automation

      section(class="black")
        h1 A department

      section(class="red")
        h1 DevOps is...

      section(class="black")
        h1 A movement

      section(class="black")
        h1 A philosophy

      section
        h1 The History

      section
        h1 There are two teams

      section
        h2(class='bullet') Developers
        h3(class='bullet') Tasked with adding features

      section
        h2(class='bullet') Operations
        h3(class='bullet') Tasked with keeping the system <strong><em>up</em></strong>

      section
        h1 Naturally opposed

      section
        img(src="images/fight.gif")

      section(class="red")
        h1 DevOps!

      section
        h1 DevOps
        ul(class="outline, bullet")
          li build one team, no siloing
          li deliver more value
          li allow people to experiment
          li have more fun doing it

      section
        img(src="images/friendship.gif")

      // - Goals
      // - How I started thinking this way
      //     - I worked as a production assistant at a film company
      //       and I was building a website for a real estate company
      //     - I developed something on MAMP, deployed to IIS and
      //       CentOS (managed through Plesk) and everything blew up
      //     - started at zivtech and started collaborating with the
      //       dev team on running hosting and operations
      section(class="red")
        h1 CAMS

      section
        h2(class="bullet") Culture
        h2(class="bullet") Automation
        h2(class="bullet") Measurement
        h2(class="bullet") Sharing

      section(class="black")
        h1 Culture

      section
        h2 A set of shared mental assumptions that guide interpretation and action in an organization by defining appropriate behavior or various situations
        ul(class="bullet")
          li from (Ravahi & Shultz, 2006 http://www.jstor.org/stable/20159775)
          li via http://www.slideshare.net/matthewskelton/what-does-devops-culture-feel-like

       section
        h2 Our Cultural Assumptions
        ul(class="bullet")
          li Everything should be repeatable
          li Develop locally, deploy for integration
          li If it matters, it is in version control
          li Everything gets reviewed
          li Open source whatever you can
          li Communicate (more on this in the sharing section)

      section
        h1 Code review

      section
        h1 Testing your own code
        img(src="images/test-own-code.gif")
      section
        h1 Others testing your code
        img(src="images/code-review.gif")

      section(class="black")
        h1 Automation

      section
        h1 Automation
        ul(class="bullet")
          li Infrastructure as code
          li Testing
          li Environments
          li Deployment
          li Cron
          li Backups

      section
        h1 Infrastructure as code

      section
        h1 Infrastructure as code
        ul(class='bullet')
          li Virtualization
          li A golden image
          li Puppet / Chef / Ansible

      section
        h1 Testing

      secton
        h1 Testing Tools
        ul(class='bullet')
         li Behat
         li Casper
         li Travis
         li Jenkins
         li http://jenkins-php.org/
         li Code quality (coder/code sniffer)

      section
        h2 Stop rolling patches <em>after</em> it breaks...
        img(src="images/patch.gif")
      section
        h2 Stop rolling patches <em>after</em> it breaks...
        img(src="images/patch-punchline.gif")

      section
        h3 And hit the ground running every time...
        img(src="images/continuous-delivery.gif")

      section
        h1 Environments
        ul(class="bullet")
          li Have at least 3
          li ...but maybe <em>N</em>

      section
        h1 Automating Environments
        ul(class="bullet")
         li <strong>Installation profiles</strong>
         li <strong>Synchronizing environments</strong>
         li    - Drush
         li    - Drush Fetcher
         li <strong>Deployment</strong>
         li    - Features
         li    - Update hooks

      section
        h1 Cron

      section
        h1 Backups

      section(class="black")
        h1 Measurement

      section
        h1 Montioring
        ul(class='bullet')
          li Uptime
          li Underlying services
          li Rate of change

      section
        h1 Tools
        ul(class='bullet')
          li Google analytics
          li Pingdom
          li Sensu / Nagios
          li Logstash / Logg.ly
          li Graphite/libretto

      section
        h1 Profiling
        ul(class='bullet')
          li Slow query logs
          li Yslow
          li Benchmarking
          li Xhprof/xdebug

      section(class="black")
        h1 Sharing

      section
        h1 Sharing
        ul(class='bullet')
          li Responsiblity (everyone is on call)
          li Meetups
          li Lunch and Lears
          li Communication
          li Email
          li Chat
          li Automated feedback

      section(class="red start-small")
        h1 Start small and keep adding

      section
        img(src="images/without-devops-tools.gif")
        h3 Without the right tools and methods

      section
        img(src="images/workaround.gif")
        h3 You can work around it

      section
        img(src="images/the-cloud.gif")
        h3 But you'll never ride thorugh the sky on a unicorn

      section(class="the-end")
        h1(class="outline huge") The End

    // build:js scripts/scripts.js
    //script(src='bower_components/modernizr/modernizr.js')
    script(src='bower_components/bespoke-fx/libs/modernizr/modernizr.custom.js')
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-fx/dist/bespoke-fx.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/prism/prism.js')
    script(src='bower_components/zepto/zepto.min.js')
    script(src='scripts/main.js')
    // endbuild
